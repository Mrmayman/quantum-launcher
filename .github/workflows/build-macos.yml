name: Build-macOS

on:
  workflow_dispatch:  # allows manual triggering

env:
  BIN_NAME: quantum_launcher
  PROJECT_NAME: quantum_launcher
  REPO_NAME: Mrmayman/quantum-launcher
  FINAL_NAME: quantum_launcher
  APP_VERSION: 0.4.0
  CARGO_TERM_COLOR: always # Tell cargo to always use colors

jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [x86_64-macos, aarch64-macos]
        include:
          - build: x86_64-macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false
            final_name: macos_x86_64
          - build: aarch64-macos
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
            cross: false
            final_name: macos_aarch64

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install ${{ matrix.rust }} toolchain
        shell: bash
        run: |
          rustup toolchain install ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          if [ "${{ matrix.cross }}" == "true" ]; then
            cargo install cross --locked
          fi

      - name: Build release binary
        shell: bash
        run: |
          if [ "${{ matrix.cross }}" == "true" ]; then
            cross build --profile release-ql --target ${{ matrix.target }}
          else
            cargo build --profile release-ql --target ${{ matrix.target }}
          fi

      - name: Create DMG
        shell: bash
        run: |
          APP_DIR="build/quantum-launcher.app"
          CONTENTS_DIR="$APP_DIR/Contents"
          MACOS_DIR="$CONTENTS_DIR/MacOS"
          RESOURCES_DIR="$CONTENTS_DIR/Resources"
          ASSETS_DIR="assets"
          ICON_PATH="$ASSETS_DIR/icon/ql_logo.png"

          mkdir -p "$MACOS_DIR" "$RESOURCES_DIR"
          cp "target/${{ matrix.target }}/release-ql/$BIN_NAME" "$MACOS_DIR/$BIN_NAME"
          cp $ASSETS_DIR/freedesktop/Info.plist "$CONTENTS_DIR/Info.plist"
          sips -s format icns "$ICON_PATH" --out "$RESOURCES_DIR/ql_logo.icns"

          APP_DIR="build/quantum-launcher.app"
          DMG_NAME="${{ env.BIN_NAME }}.dmg"
          DMG_PATH="dist/$DMG_NAME"
          VOL_NAME="quantum_launcher"
          mkdir -p dist

          SOURCE_SIZE_KB=$(du -sk "$APP_DIR" | awk '{print $1}')
          echo "Source size: $SOURCE_SIZE_KB KB"
          TOTAL_SIZE_MB=$((($SOURCE_SIZE_KB + 512) / 1024 + 2))
          echo "Total size: $TOTAL_SIZE_MB MB"
          hdiutil create -volname "$VOL_NAME" -srcfolder "$APP_DIR" -fs HFS+J -format UDRW -size "${TOTAL_SIZE_MB}m" "$DMG_PATH"
          hdiutil attach -nobrowse "$DMG_PATH"
          DMG_MOUNT=$(hdiutil attach -nobrowse "$DMG_PATH" | grep "/Volumes/" | awk '{print $3}')
          cp -r "$APP_DIR" "$DMG_MOUNT"
          hdiutil detach "$DMG_MOUNT"

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.FINAL_NAME}}_${{ matrix.final_name }}
          path: dist
